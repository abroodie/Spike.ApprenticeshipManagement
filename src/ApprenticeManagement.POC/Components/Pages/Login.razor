@page "/login"
@using ApprenticeManagement.POC.Authentication
@using Plugin.Firebase.CloudMessaging
@using System.Security.Claims
@inject NavigationManager  NavigationManager
@inject CustomAuthenticationStateProvider AuthenticationStateProvider
@inject UserAccounts UserAccounts
@inject UserAccountAuthenticator UserAccountAuthenticator
@inject DeviceManagementService DeviceManagementService

<h3>Login to access the app</h3>

<div class="alert alert-info">
    This is a dummy login page.  
</div>

<EditForm Model="@LoginUser" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label>Username</label>
        <InputSelect id="user" @bind-Value="LoginUser.UserName" class="form-control">
            <option value="">Select a user</option>
            @foreach (var account in UserAccounts.Users)
            {
                <option value="@account.Username">@account.Username</option>
            }
            
            @*             <option value="providera_user1">Provider A</option>
            <option value="employerb_user1">Provider B</option>
 *@
        </InputSelect>
    </div>
@*     <div class="form-group">
        <label>Password</label>
        <InputText id="password" type="password" @bind-Value="loginModel.Password" class="form-control" />
    </div>
 *@    <div class="form-group mt-1">
        <button type="submit" class="btn btn-primary w-100">Login</button>
    </div>
</EditForm>


@code {
    private string user;
    //private List<(string UserName, string AccountId, string token)> 
    private LoginUser LoginUser = new LoginUser();

    private async Task HandleValidSubmit()
    {
        var authResult = UserAccountAuthenticator.AuthenticateUser(LoginUser.UserName);
        if (!authResult.IsValid)
            return; //TODO: shouldn't actually be able to get here

        await AuthenticationStateProvider.Login(authResult.AuthenticatedUser);
        NavigationManager.NavigateTo("/");
    }
}
